/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.24
 * Generated at: 2015-08-29 04:38:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.exam01;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dto.*;

public final class modify_005fform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("dto");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

int boardNo=Integer.parseInt(request.getParameter("board_no"));

      out.write("\r\n");
      out.write("\r\n");
      service.BoardService boardService = null;
      synchronized (application) {
        boardService = (service.BoardService) _jspx_page_context.getAttribute("boardService", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (boardService == null){
          boardService = new service.BoardService();
          _jspx_page_context.setAttribute("boardService", boardService, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("\t \r\n");
 Board board=boardService.getBoard(boardNo); 
      out.write("\t \r\n");
      out.write("\t \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\t<html>\r\n");
      out.write("\t\t<head>\r\n");
      out.write("\t\t\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t\t\t<title>Insert title here</title>\r\n");
      out.write("\t\t\t<style type=\"text/css\">\r\n");
      out.write("\t\t\t\tbody{\r\n");
      out.write("\t\t\t\t\tfont-family:\"돋움\";\r\n");
      out.write("\t\t\t\t\tfont-size:12px;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tspan{\r\n");
      out.write("\t\t\t\t\tdisplay:inline-block;\r\n");
      out.write("\t\t\t\t\tmargin:3px 10px;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tspan.title{\r\n");
      out.write("\t\t\t\t\tborder:1px solid darkgray;\r\n");
      out.write("\t\t\t\t\tbackground: lightgray;\r\n");
      out.write("\t\t\t\t\twidth:70px;\r\n");
      out.write("\t\t\t\t\ttext-align:center;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tpre{\r\n");
      out.write("\t\t\t\t\tmargin:10px;\r\n");
      out.write("\t\t\t\t\tborder:1px solid darkgray;\r\n");
      out.write("\t\t\t\t\tpadding:10px;\r\n");
      out.write("\t\t\t\t\twidth:300px;\r\n");
      out.write("\t\t\t\t\theight:100px;\r\n");
      out.write("\t\t\t\t\tfont-size:12px;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</style>\r\n");
      out.write("\t\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t\tfunction sendData(){\r\n");
      out.write("\t\t\t\t\t//값의 유효성 검사\r\n");
      out.write("\t\t\t\t\t//var modifyForm=document.querySelector(\"#modifyForm\");\r\n");
      out.write("\t\t\t\t\tvar modifyForm=document.modifyForm;\r\n");
      out.write("\t\t\t\t\tconsole.log(modifyForm);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar title=document.modifyForm.title;\r\n");
      out.write("\t\t\t\t\tconsole.log(title);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar content=document.modifyForm.content;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(title.value==\"\"||content.value==\"\"){\r\n");
      out.write("\t\t\t\t\t\talert(\"제목과 내용은 있어야함\");\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t//서버로 전송\r\n");
      out.write("\t\t\t\t\tmodifyForm.submit();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t</head>\r\n");
      out.write("\t\t<body>\r\n");
      out.write("\t\t\t<h4>게시물 보기</h4>\r\n");
      out.write("\t\t\t<form id=\"modifyForm\" name=\"modifyForm\" method=\"post\" action=\"modify.jsp\">\r\n");
      out.write("\t\t\t\t<span class=\"title\">번호:</span>\r\n");
      out.write("\t\t\t\t<span class=\"content\">");
      out.print(board.getNo() );
      out.write("</span>\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"no\" value=\"");
      out.print(board.getNo());
      out.write("\" /><br/>\r\n");
      out.write("\t\t\t\t<span class=\"title\">제목:</span>\r\n");
      out.write("\t\t\t\t<input id=\"title\" type=\"text\" name=\"title\" value=\"");
      out.print(board.getTitle() );
      out.write("\"/><br/>\r\n");
      out.write("\t\t\t\t<span class=\"title\">글쓴이:</span>\r\n");
      out.write("\t\t\t\t<span class=\"content\">");
      out.print(board.getWriter() );
      out.write("</span><br/>\r\n");
      out.write("\t\t\t\t<span class=\"title\">날짜:</span>\r\n");
      out.write("\t\t\t\t<span class=\"content\">");
      out.print(board.getDate() );
      out.write("</span><br/>\r\n");
      out.write("\t\t\t\t<span class=\"title\">조회수:</span>\r\n");
      out.write("\t\t\t\t<span class=\"content\">");
      out.print(board.getHitcount() );
      out.write("</span><br/>\r\n");
      out.write("\t\t\t\t<span class=\"title\">내용:</span><br/>\r\n");
      out.write("\t\t\t\t<textarea name=\"content\" cols=\"30\" rows=\"5\">");
      out.print(board.getContent() );
      out.write("</textarea>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t<div id=\"buttonGroup\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<a href=\"javascript:sendData()\">[수정]</a>\r\n");
      out.write("\t\t\t\t<a href=\"detail.jsp?board_no=");
      out.print(board.getNo());
      out.write("\">[취소]</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</body>\r\n");
      out.write("\t</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
