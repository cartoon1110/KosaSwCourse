/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.24
 * Generated at: 2015-08-31 06:32:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import mysns.sns.*;
import mysns.member.*;
import java.util.*;

public final class sns_005fcontrol_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1439529924450L));
    _jspx_dependants.put("jar:file:/C:/kosaswcourse/workspace-web/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/mysns/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("mysns.member");
    _jspx_imports_packages.add("mysns.sns");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- 페이지 지시어 및 jstl 사용을 위한 taglib 지시어 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 메시지 처리 빈즈 -->\r\n");
      mysns.sns.Message msg = null;
      msg = (mysns.sns.Message) _jspx_page_context.getAttribute("msg", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (msg == null){
        msg = new mysns.sns.Message();
        _jspx_page_context.setAttribute("msg", msg, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      mysns.sns.MessageDAO msgdao = null;
      msgdao = (mysns.sns.MessageDAO) _jspx_page_context.getAttribute("msgdao", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (msgdao == null){
        msgdao = new mysns.sns.MessageDAO();
        _jspx_page_context.setAttribute("msgdao", msgdao, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      mysns.sns.Reply reply = null;
      reply = (mysns.sns.Reply) _jspx_page_context.getAttribute("reply", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (reply == null){
        reply = new mysns.sns.Reply();
        _jspx_page_context.setAttribute("reply", reply, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 프로퍼티 set -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("msg"), request);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("reply"), request);
      out.write("\r\n");
      out.write("\r\n");

	// 기본 파라미터 정리
	// 컨트롤러 요청 action 코드 값
	String action = request.getParameter("action");

	// 다음 페이지 요청 카운트
	String cnt = request.getParameter("cnt");

	// 특정 회원 게시물 only
	String suid = request.getParameter("suid");

	// 홈 URL
	String home;

	// 메시지 페이지 카운트
	int mcnt;

	if ((cnt != null) && (suid != null)) {
		// 각 action 처리후 메인으로 되돌아가기 위한 기본 url
		home = "sns_control.jsp?action=getall&cnt=" + cnt + "&suid=" + suid;
		mcnt = Integer.parseInt(request.getParameter("cnt"));
	} else {
		// 게시글 작성시에는 현재 상태와 상관 없이 전체 게시물의 첫페이지로 이동 하기 위한 url
		home = "sns_control.jsp?action=getall";
		// 첫페이지 요청인 경우, 기본 게시물 5개씩
		mcnt = 5;
	}

	// 댓글이 달린 게시물 위치 정보 -> accordion 상태 유지 목적
	request.setAttribute("curmsg", request.getParameter("curmsg"));

	// 새로운 메시지 등록
	if (action.equals("newmsg")) {
		if (msgdao.newMsg(msg))
			response.sendRedirect(home);
		else
			throw new Exception("메시지 등록 오류!!");
		// 댓글 등록
	} else if (action.equals("newreply")) {
		if (msgdao.newReply(reply))
			pageContext.forward(home);
		else
			throw new Exception("댓글 등록 오류!!");
	}
	// 메시지 삭제
	else if (action.equals("delmsg")) {
		if (msgdao.delMsg(msg.getMid()))
			response.sendRedirect(home);
		else
			throw new Exception("메시지 등록 오류!!");
		;
	}
	// 댓글 삭제
	else if (action.equals("delreply")) {
		if (msgdao.delReply(reply.getRid())) {
			pageContext.forward(home);
		} else
			throw new Exception("메시지 등록 오류!!");
		;
	}
	// 전체 게시글 가져오기
	else if (action.equals("getall")) {
		ArrayList<MessageSet> datas = msgdao.getAll(mcnt, suid);
		ArrayList<String> nusers = new MemberDAO().getNewMembers();

		// 게시글 목록
		request.setAttribute("datas", datas);

		// 신규 회원 목록
		request.setAttribute("nusers", nusers);

		// 특정 회원 only 인 경우 회원 uid 를 request  scope 에 저장
		request.setAttribute("suid", suid);

		// 현재 페이지 카운트 정보 저장
		request.setAttribute("cnt", mcnt);

		pageContext.forward("sns_board.jsp");
	}
	// 좋아요 추가
	else if (action.equals("fav")) {
		msgdao.favorite(msg.getMid());
		pageContext.forward(home);
	}

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
